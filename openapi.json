{
  "security": [
    {
      "apiKeyAuth": [],
      "UserIdAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://v1.api.flux-os.com",
      "description": "v1"
    }
  ],
  "info": {
    "description": "This API provides access to data on the Flux platform.",
    "contact": {
      "name": "Flux API Support",
      "email": "support@flux-os.com",
      "url": "https://www.flux-os.com/contact"
    },
    "title": "Flux API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Service",
      "description": "Health check and basic service operations, such as the ping endpoint."
    },
    {
      "name": "Organization",
      "description": "Endpoints for organizations to configure, view, and manage their users, roles, permissions, product category specifications, commercial units, etc."
    },
    {
      "name": "Products",
      "description": "Endpoints for managing products, product categories, specifications, and conversions."
    },
    {
      "name": "Currency",
      "description": "Endpoints for handling currencies, conversions, and related financial data."
    },
    {
      "name": "Entity",
      "description": "Endpoints for managing entities such as producers, carriers, marketers, and other stakeholders."
    },
    {
      "name": "Facilities",
      "description": "Endpoints for managing facilities such as terminals, batteries, pipelines, etc."
    },
    {
      "name": "Wells",
      "description": "Endpoints for managing wells."
    },
    {
      "name": "Volumes",
      "description": "Endpoints for managing volumes, including tickets, meters, and volume transactions."
    },
    {
      "name": "Integrations",
      "description": "Endpoints for aiding data ingestion, integrations, and data transformation pipelines between an organization's systems and Flux."
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "UserIdAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-user-id"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized. The API key is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. The user does not have the necessary permissions.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden."
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Something went wrong on the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error."
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "The request was malformed or contained invalid parameters.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid parameter format: page must be a positive integer."
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "OrganizationReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "UserRoles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UserPermissions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Organization_User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "stytch_id": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoles"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissions"
            }
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone",
          "stytch_id",
          "title"
        ]
      },
      "EntityReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "legal_name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "unit": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "street": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "city": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "province": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "state": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "country": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "START",
              "INACTIVE_REACTIVATE_ELIGIBLE",
              "LIQUIDATION",
              "NON_REGISTERED",
              "DISCONTINUED_NO_REACTIVATION",
              "DISSOLVED",
              "CONTINUED_OUT",
              "ACTIVE",
              "STRUCK",
              "CONTINUED_OUT_AMALGAMATED",
              "AMALGAMATED",
              "DISSOLUTION/DISSOLVED"
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date"
          },
          "successor": {
            "default": null,
            "nullable": true
          },
          "business_lines": {
            "readOnly": true
          }
        },
        "required": [
          "effective_date",
          "legal_name"
        ]
      },
      "Organization_Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityReference"
            }
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "OrganizationReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "FacilityReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Organization_CommercialFacility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacilityReference"
            },
            "nullable": true
          }
        },
        "required": [
          "lsd",
          "meridian",
          "name",
          "range",
          "section",
          "township"
        ]
      },
      "Organization_CommercialFacilityFacility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "commercial_facility": {},
          "facility": {
            "$ref": "#/components/schemas/FacilityReference"
          }
        },
        "required": [
          "commercial_facility"
        ]
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "Product_Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "product_category": {
            "$ref": "#/components/schemas/ProductCategory"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "MeasurementUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "V",
              "T",
              "D",
              "P",
              "M",
              "E",
              "F"
            ]
          }
        },
        "required": [
          "abbreviation",
          "name",
          "type"
        ]
      },
      "UnitConversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_category": {
            "default": null,
            "nullable": true
          },
          "to_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "formula": {
            "type": "string"
          }
        },
        "required": [
          "formula"
        ]
      },
      "UnitConversion1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_category": {
            "default": null,
            "nullable": true
          },
          "from_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "formula": {
            "type": "string"
          }
        },
        "required": [
          "formula"
        ]
      },
      "Product_MeasurementUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "V",
              "T",
              "D",
              "P",
              "M",
              "E",
              "F"
            ]
          },
          "from_conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitConversion"
            }
          },
          "to_conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitConversion1"
            }
          }
        },
        "required": [
          "abbreviation",
          "name",
          "type"
        ]
      },
      "UnitConversion2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_category": {
            "default": null,
            "nullable": true
          },
          "from_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "to_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "formula": {
            "type": "string"
          }
        },
        "required": [
          "formula"
        ]
      },
      "Product_ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "unit_conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitConversion2"
            }
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "ProductCategoryReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "MeasurementUnitReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "abbreviation": {
            "type": "string"
          }
        },
        "required": [
          "abbreviation"
        ]
      },
      "Product_ProductCategorySpecification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_category": {
            "$ref": "#/components/schemas/ProductCategoryReference"
          },
          "density_min": {
            "type": "number"
          },
          "density_max": {
            "type": "number"
          },
          "density_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference"
          },
          "bsw_min": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_max": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference"
          }
        },
        "required": [
          "density_max",
          "density_min"
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "symbol"
        ]
      },
      "CurrencyConversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "to_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "exchange_rate": {
            "type": "number"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "exchange_rate"
        ]
      },
      "Currency_Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversion"
            }
          }
        },
        "required": [
          "name",
          "symbol"
        ]
      },
      "Currency_CurrencyConversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "from_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "to_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "exchange_rate": {
            "type": "number"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "exchange_rate"
        ]
      },
      "EntityReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "legal_name": {
            "type": "string"
          }
        },
        "required": [
          "legal_name"
        ]
      },
      "FacilityReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "WellReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string"
          }
        },
        "required": [
          "regulator_id"
        ]
      },
      "ProductReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProductCategoryReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "BusinessLineReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Entity_Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "legal_name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "unit": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "street": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "city": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "province": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "state": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "country": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "START",
              "INACTIVE_REACTIVATE_ELIGIBLE",
              "LIQUIDATION",
              "NON_REGISTERED",
              "DISCONTINUED_NO_REACTIVATION",
              "DISSOLVED",
              "CONTINUED_OUT",
              "ACTIVE",
              "STRUCK",
              "CONTINUED_OUT_AMALGAMATED",
              "AMALGAMATED",
              "DISSOLUTION/DISSOLVED"
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date"
          },
          "successor": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "operated_facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacilityReference1"
            }
          },
          "licensed_facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacilityReference1"
            }
          },
          "licensed_wells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WellReference"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReference"
            }
          },
          "product_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReference1"
            }
          },
          "business_lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessLineReference"
            }
          }
        },
        "required": [
          "effective_date",
          "legal_name"
        ]
      },
      "Wells_Well": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "uwi": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "location_exception": {
            "type": "string"
          },
          "event_sequence": {
            "type": "string"
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "licensee": {},
          "license_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "AMMENDED",
              "CANCELLED",
              "DECOMMISSION",
              "ISSUED",
              "RE-ENTERED",
              "RECCERTIFIED",
              "RECEXEMPT",
              "SUSPENDED",
              "SUSPENSION"
            ]
          },
          "license_type": {
            "type": "string",
            "enum": [
              "WELL",
              "FACILITY"
            ]
          },
          "license_number": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "license_issued": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string"
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          },
          "entity": {
            "$ref": "#/components/schemas/EntityReference1"
          }
        },
        "required": [
          "event_sequence",
          "licensee",
          "location_exception",
          "lsd",
          "meridian",
          "range",
          "regulator_id",
          "section",
          "township",
          "uwi"
        ]
      },
      "FacilitySubType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "facility_type": {},
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "code",
          "facility_type",
          "name"
        ]
      },
      "Facility_FacilityType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "model": {
            "type": "string",
            "enum": [
              "Terminal",
              "Station",
              "Plant",
              "Battery",
              "System",
              "Pipeline",
              "Rail Line"
            ]
          },
          "sub_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacilitySubType"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Facility_FacilitySubType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "facility_type": {},
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "code",
          "facility_type",
          "name"
        ]
      },
      "FacilityTypeReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "FacilitySubTypeReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Facility_Facility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FacilityTypeReference"
          },
          "sub_type": {
            "$ref": "#/components/schemas/FacilitySubTypeReference"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "operator": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "operational_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "ACTIVE",
              "CANCELLED",
              "MINSUSPEND",
              "NEW",
              "NONREPORTING",
              "RECCERTIFIED",
              "RECEXEMPT",
              "RETIRED",
              "SUSPENDED"
            ]
          },
          "operator_start_date": {
            "type": "string",
            "format": "date"
          },
          "licensee": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "license_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "AMMENDED",
              "CANCELLED",
              "DECOMMISSION",
              "ISSUED",
              "RE-ENTERED",
              "RECCERTIFIED",
              "RECEXEMPT",
              "SUSPENDED",
              "SUSPENSION"
            ]
          },
          "license_type": {
            "type": "string",
            "enum": [
              "WELL",
              "FACILITY"
            ]
          },
          "license_number": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "license_issued": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "lsd",
          "meridian",
          "name",
          "operator_start_date",
          "range",
          "section",
          "start_date",
          "township"
        ]
      },
      "Volumes_Meter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "facility": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FacilityReference1"
              }
            ]
          },
          "operator": {
            "$ref": "#/components/schemas/EntityReference1"
          }
        },
        "required": [
          "external_id"
        ]
      },
      "TicketStatusReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "EntityReference2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "UserReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name"
        ]
      },
      "CommercialFacilityReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "MeterReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          }
        },
        "required": [
          "external_id"
        ]
      },
      "MeasurementUnitReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        },
        "required": [
          "abbreviation",
          "name"
        ]
      },
      "TicketCodeReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "TruckTicketErrorReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "field_name": {
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "error_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "resolved_by": {
            "type": "integer"
          }
        },
        "required": [
          "error_message",
          "error_type",
          "field_name"
        ]
      },
      "Volumes_TruckTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatusReference"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "bill_of_lading": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "load_ticket": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "carrier": {
            "$ref": "#/components/schemas/EntityReference2"
          },
          "driver": {
            "$ref": "#/components/schemas/UserReference"
          },
          "pickup_commercial_facility": {
            "$ref": "#/components/schemas/CommercialFacilityReference"
          },
          "pickup_commercial_entity": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "pickup_facility_operator": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "pickup_facility": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FacilityReference1"
              }
            ]
          },
          "pickup_well": {
            "$ref": "#/components/schemas/WellReference"
          },
          "delivery_commercial_facility": {
            "$ref": "#/components/schemas/CommercialFacilityReference"
          },
          "delivery_commercial_entity": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "delivery_facility_operator": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "delivery_facility": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FacilityReference1"
              }
            ]
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "meter": {
            "$ref": "#/components/schemas/MeterReference"
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "load_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "load_volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketCodeReference"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckTicketErrorReference"
            }
          }
        },
        "required": [
          "external_id"
        ]
      },
      "Volumes_TankTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatusReference"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "commercial_facility": {
            "$ref": "#/components/schemas/CommercialFacilityReference"
          },
          "commercial_entity": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "facility_operator": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "facility": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FacilityReference1"
              }
            ]
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "meter": {
            "$ref": "#/components/schemas/MeterReference"
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketCodeReference"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckTicketErrorReference"
            }
          }
        },
        "required": [
          "external_id"
        ]
      },
      "Volumes_MeterTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatusReference"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "commercial_facility": {
            "$ref": "#/components/schemas/CommercialFacilityReference"
          },
          "commercial_entity": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "facility_operator": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "facility": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FacilityReference1"
              }
            ]
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "meter": {
            "$ref": "#/components/schemas/MeterReference"
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnitReference1"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnitReference1"
              }
            ]
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketCodeReference"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckTicketErrorReference"
            }
          }
        },
        "required": [
          "external_id"
        ]
      },
      "Integrations_CommercialFacilityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "commercial_facility": {
            "$ref": "#/components/schemas/CommercialFacilityReference"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Integrations_FacilityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "facility": {
            "$ref": "#/components/schemas/FacilityReference"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Integrations_EntityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "entity": {
            "$ref": "#/components/schemas/EntityReference1"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "WellReference1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "uwi": {
            "type": "string"
          }
        },
        "required": [
          "uwi"
        ]
      },
      "Integrations_WellLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "well": {
            "$ref": "#/components/schemas/WellReference1"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Organization_ReferenceOrganization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "UserRolesReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UserPermissionsReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Organization_ReferenceUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "stytch_id": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference1"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRolesReference"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionsReference"
            }
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone",
          "stytch_id",
          "title"
        ]
      },
      "Organization_ReferenceUserRoles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Organization_ReferenceUserPermissions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Organization_ReferenceCommercialFacility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "organization": {}
        },
        "required": [
          "lsd",
          "meridian",
          "name",
          "organization",
          "range",
          "section",
          "township"
        ]
      },
      "Organization_ReferenceCommercialFacilityFacility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "commercial_facility": {},
          "facility": {
            "$ref": "#/components/schemas/FacilityReference"
          }
        },
        "required": [
          "commercial_facility"
        ]
      },
      "ProductCategoryReference2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "Product_ReferenceProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "product_category": {
            "$ref": "#/components/schemas/ProductCategoryReference2"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "Product_ReferenceMeasurementUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "VOLUME",
              "TEMPERATURE",
              "DIMENSIONLESS",
              "DENSITY",
              "DISTANCE",
              "PRESSURE",
              "VISCOSITY",
              "MASS RATIO",
              "ENERGY",
              "FLOW RATE",
              "POWER",
              "PARTICLE SIZE"
            ]
          }
        },
        "required": [
          "abbreviation",
          "name"
        ]
      },
      "Product_ReferenceProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "short_code"
        ]
      },
      "Product_ReferenceProductCategorySpecification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_category": {
            "type": "integer"
          },
          "organization": {},
          "density_min": {
            "type": "number"
          },
          "density_max": {
            "type": "number"
          },
          "density_measurement_unit": {
            "type": "integer"
          },
          "bsw_min": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_max": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "type": "integer"
          },
          "entity": {
            "type": "integer"
          }
        },
        "required": [
          "density_max",
          "density_min",
          "organization"
        ]
      },
      "Currency_ReferenceCurrency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "symbol"
        ]
      },
      "Currency_ReferenceCurrencyConversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "from_currency": {
            "type": "integer"
          },
          "to_currency": {
            "type": "integer"
          },
          "exchange_rate": {
            "type": "number"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "exchange_rate"
        ]
      },
      "Entity_ReferenceEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "legal_name": {
            "type": "string"
          },
          "organization": {
            "default": null,
            "nullable": true
          },
          "url": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "email": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "unit": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "street": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "city": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "province": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "state": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "country": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "START",
              "INACTIVE_REACTIVATE_ELIGIBLE",
              "LIQUIDATION",
              "NON_REGISTERED",
              "DISCONTINUED_NO_REACTIVATION",
              "DISSOLVED",
              "CONTINUED_OUT",
              "ACTIVE",
              "STRUCK",
              "CONTINUED_OUT_AMALGAMATED",
              "AMALGAMATED",
              "DISSOLUTION/DISSOLVED"
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date"
          },
          "successor": {
            "default": null,
            "nullable": true
          },
          "business_lines": {
            "readOnly": true
          }
        },
        "required": [
          "effective_date",
          "legal_name"
        ]
      },
      "Entity_ReferenceBusinessLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Facility_ReferenceFacilityType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "model": {
            "type": "string",
            "enum": [
              "Terminal",
              "Station",
              "Plant",
              "Battery",
              "System",
              "Pipeline",
              "Rail Line"
            ]
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Facility_ReferenceFacilitySubType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Facility_ReferenceFacility": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "type": {},
          "sub_type": {},
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "operator": {},
          "operational_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "ACTIVE",
              "CANCELLED",
              "MINSUSPEND",
              "NEW",
              "NONREPORTING",
              "RECCERTIFIED",
              "RECEXEMPT",
              "RETIRED",
              "SUSPENDED"
            ]
          },
          "operator_start_date": {
            "type": "string",
            "format": "date"
          },
          "licensee": {
            "default": null,
            "nullable": true
          },
          "license_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "AMMENDED",
              "CANCELLED",
              "DECOMMISSION",
              "ISSUED",
              "RE-ENTERED",
              "RECCERTIFIED",
              "RECEXEMPT",
              "SUSPENDED",
              "SUSPENSION"
            ]
          },
          "license_type": {
            "type": "string",
            "enum": [
              "WELL",
              "FACILITY"
            ]
          },
          "license_number": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "license_issued": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "regulator_id": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "lsd",
          "meridian",
          "name",
          "operator",
          "operator_start_date",
          "range",
          "section",
          "start_date",
          "sub_type",
          "township",
          "type"
        ]
      },
      "Wells_ReferenceWell": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "uwi": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "location_exception": {
            "type": "string"
          },
          "event_sequence": {
            "type": "string"
          },
          "lsd": {
            "type": "integer"
          },
          "section": {
            "type": "integer"
          },
          "township": {
            "type": "integer"
          },
          "range": {
            "type": "integer"
          },
          "meridian": {
            "type": "string"
          },
          "jurisdiction": {
            "type": "string",
            "enum": [
              "ALBERTA",
              "SASKATCHEWAN"
            ]
          },
          "licensee": {},
          "license_status": {
            "type": "string",
            "enum": [
              "ABANDONED",
              "AMMENDED",
              "CANCELLED",
              "DECOMMISSION",
              "ISSUED",
              "RE-ENTERED",
              "RECCERTIFIED",
              "RECEXEMPT",
              "SUSPENDED",
              "SUSPENSION"
            ]
          },
          "license_type": {
            "type": "string",
            "enum": [
              "WELL",
              "FACILITY"
            ]
          },
          "license_number": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "license_issued": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "regulator_id": {
            "type": "string"
          },
          "regulator_system": {
            "type": "string",
            "enum": [
              "PETRINEX"
            ]
          }
        },
        "required": [
          "event_sequence",
          "licensee",
          "location_exception",
          "lsd",
          "meridian",
          "range",
          "regulator_id",
          "section",
          "township",
          "uwi"
        ]
      },
      "Volumes_ReferenceMeter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "facility": {
            "default": null,
            "nullable": true
          },
          "operator": {}
        },
        "required": [
          "external_id",
          "operator"
        ]
      },
      "Volumes_ReferenceTicketStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "Volumes_ReferenceTicketCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Volumes_ReferenceTruckTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "readOnly": true
          },
          "organization": {
            "readOnly": true
          },
          "bill_of_lading": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "load_ticket": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "carrier": {
            "default": null,
            "nullable": true
          },
          "driver": {
            "default": null,
            "nullable": true
          },
          "pickup_commercial_facility": {
            "default": null,
            "nullable": true
          },
          "pickup_commercial_entity": {
            "default": null,
            "nullable": true
          },
          "pickup_facility_operator": {
            "default": null,
            "nullable": true
          },
          "pickup_facility": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "pickup_well": {
            "default": null,
            "nullable": true
          },
          "delivery_commercial_facility": {
            "default": null,
            "nullable": true
          },
          "delivery_commercial_entity": {
            "default": null,
            "nullable": true
          },
          "delivery_facility_operator": {
            "default": null,
            "nullable": true
          },
          "delivery_facility": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "default": null,
            "nullable": true
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "load_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "load_volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "codes": {
            "readOnly": true
          }
        },
        "required": [
          "external_id",
          "organization",
          "status"
        ]
      },
      "Volumes_ReferenceTruckTicketError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "field_name": {
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "error_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "resolved_by": {
            "type": "integer"
          }
        },
        "required": [
          "error_message",
          "error_type",
          "field_name"
        ]
      },
      "Volumes_RequestTruckTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "readOnly": true
          },
          "organization": {
            "type": "integer",
            "readOnly": true
          },
          "bill_of_lading": {
            "type": "string"
          },
          "load_ticket": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "carrier": {
            "type": "integer"
          },
          "driver": {
            "type": "integer",
            "nullable": true
          },
          "pickup_commercial_facility": {
            "type": "integer"
          },
          "pickup_commercial_entity": {
            "type": "integer"
          },
          "pickup_facility_operator": {
            "type": "integer"
          },
          "pickup_facility": {
            "type": "integer"
          },
          "pickup_well": {
            "type": "integer"
          },
          "delivery_commercial_facility": {
            "type": "integer"
          },
          "delivery_commercial_entity": {
            "type": "integer"
          },
          "delivery_facility_operator": {
            "type": "integer"
          },
          "delivery_facility": {
            "type": "integer"
          },
          "production_date": {
            "type": "string",
            "format": "date-time"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "type": "integer"
          },
          "meter_start": {
            "type": "number"
          },
          "meter_end": {
            "type": "number"
          },
          "meter_measurement_unit": {
            "type": "integer"
          },
          "meter_factor": {
            "type": "number"
          },
          "volume": {
            "type": "number"
          },
          "volume_measurement_unit": {
            "type": "integer"
          },
          "load_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "load_volume_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "density": {
            "type": "number"
          },
          "density_measurement_unit": {
            "type": "integer"
          },
          "bsw": {
            "type": "number"
          },
          "bsw_measurement_unit": {
            "type": "integer"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "bill_of_lading",
          "bsw",
          "bsw_measurement_unit",
          "carrier",
          "codes",
          "delivery_commercial_entity",
          "delivery_commercial_facility",
          "delivery_facility",
          "delivery_facility_operator",
          "density",
          "density_measurement_unit",
          "end",
          "external_id",
          "meter",
          "meter_end",
          "meter_factor",
          "meter_start",
          "pickup_commercial_entity",
          "pickup_commercial_facility",
          "pickup_facility",
          "pickup_facility_operator",
          "pickup_well",
          "production_date",
          "start",
          "volume"
        ]
      },
      "Volumes_ReferenceTankTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "readOnly": true,
            "type": "string"
          },
          "organization": {},
          "commercial_facility": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "commercial_entity": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "facility_operator": {
            "default": null,
            "nullable": true
          },
          "facility": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "default": null,
            "nullable": true
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "codes": {
            "readOnly": true
          }
        },
        "required": [
          "external_id",
          "organization"
        ]
      },
      "Volumes_ReferenceTankTicketError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "field_name": {
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "error_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "resolved_by": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              }
            ]
          }
        },
        "required": [
          "error_message",
          "error_type",
          "field_name"
        ]
      },
      "Volumes_RequestTankTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "readOnly": true
          },
          "organization": {
            "type": "integer",
            "readOnly": true
          },
          "commercial_facility": {
            "type": "integer"
          },
          "commercial_entity": {
            "type": "integer"
          },
          "facility_operator": {
            "type": "integer"
          },
          "facility": {
            "type": "integer"
          },
          "production_date": {
            "type": "string",
            "format": "date-time"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "type": "integer"
          },
          "meter_start": {
            "type": "number"
          },
          "meter_end": {
            "type": "number"
          },
          "meter_measurement_unit": {
            "type": "integer"
          },
          "meter_factor": {
            "type": "number"
          },
          "volume": {
            "type": "number"
          },
          "volume_measurement_unit": {
            "type": "integer"
          },
          "density": {
            "type": "number"
          },
          "density_measurement_unit": {
            "type": "integer"
          },
          "bsw": {
            "type": "number"
          },
          "bsw_measurement_unit": {
            "type": "integer"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "bsw",
          "bsw_measurement_unit",
          "codes",
          "commercial_entity",
          "commercial_facility",
          "density",
          "density_measurement_unit",
          "end",
          "external_id",
          "facility",
          "facility_operator",
          "meter",
          "meter_end",
          "meter_factor",
          "meter_start",
          "production_date",
          "start",
          "volume"
        ]
      },
      "Volumes_ReferenceMeterTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "readOnly": true,
            "type": "string"
          },
          "organization": {},
          "commercial_facility": {
            "default": null,
            "nullable": true
          },
          "commercial_entity": {
            "default": null,
            "nullable": true
          },
          "facility_operator": {
            "default": null,
            "nullable": true
          },
          "facility": {
            "type": "integer",
            "nullable": true
          },
          "production_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "default": null,
            "nullable": true
          },
          "meter_start": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_end": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "meter_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "meter_factor": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "net_volume": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "net_volume_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "density": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "density_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "bsw": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "bsw_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "default": null,
            "nullable": true
          },
          "codes": {
            "readOnly": true
          }
        },
        "required": [
          "external_id",
          "organization"
        ]
      },
      "Volumes_ReferenceMeterTicketError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "field_name": {
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "error_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "resolved_by": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              }
            ]
          }
        },
        "required": [
          "error_message",
          "error_type",
          "field_name"
        ]
      },
      "Volumes_RequestMeterTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "readOnly": true
          },
          "organization": {
            "type": "integer",
            "readOnly": true
          },
          "commercial_facility": {
            "type": "integer"
          },
          "commercial_entity": {
            "type": "integer"
          },
          "facility_operator": {
            "type": "integer"
          },
          "facility": {
            "type": "integer"
          },
          "production_date": {
            "type": "string",
            "format": "date-time"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "meter": {
            "type": "integer"
          },
          "meter_start": {
            "type": "number"
          },
          "meter_end": {
            "type": "number"
          },
          "meter_measurement_unit": {
            "type": "integer"
          },
          "meter_factor": {
            "type": "number"
          },
          "volume": {
            "type": "number"
          },
          "volume_measurement_unit": {
            "type": "integer"
          },
          "density": {
            "type": "number"
          },
          "density_measurement_unit": {
            "type": "integer"
          },
          "bsw": {
            "type": "number"
          },
          "bsw_measurement_unit": {
            "type": "integer"
          },
          "solids": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "solids_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "water": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "water_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "default": null,
            "nullable": true
          },
          "temperature_measurement_unit": {
            "type": "integer",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "bsw",
          "bsw_measurement_unit",
          "codes",
          "commercial_entity",
          "commercial_facility",
          "density",
          "density_measurement_unit",
          "end",
          "external_id",
          "facility",
          "facility_operator",
          "meter",
          "meter_end",
          "meter_factor",
          "meter_start",
          "production_date",
          "start",
          "volume"
        ]
      },
      "Integrations_ReferenceCommercialFacilityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "commercial_facility": {
            "type": "integer"
          },
          "organization": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Integrations_ReferenceFacilityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "facility": {
            "type": "integer"
          },
          "organization": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Integrations_ReferenceEntityLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "entity": {
            "type": "integer"
          },
          "organization": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      },
      "Integrations_ReferenceWellLookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "well": {
            "type": "integer"
          },
          "organization": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "name",
          "start_date"
        ]
      }
    }
  },
  "paths": {
    "/facilities": {
      "get": {
        "summary": "List Facilities",
        "description": "Retrieve a list of facilities with pagination and filtering options.",
        "operationId": "get_facilities",
        "tags": [
          "Facilities"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by facility name"
          },
          {
            "in": "query",
            "name": "type_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by facility type ID"
          },
          {
            "in": "query",
            "name": "subtype_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by facility subtype ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filter by facility status"
          },
          {
            "in": "query",
            "name": "operator_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by operator ID"
          },
          {
            "in": "query",
            "name": "licensee_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by licensee ID"
          },
          {
            "in": "query",
            "name": "regulator_id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by regulator ID"
          },
          {
            "in": "query",
            "name": "model_name",
            "schema": {
              "type": "string",
              "enum": [
                "Terminal",
                "Station",
                "Plant",
                "Battery",
                "System",
                "Pipeline",
                "Rail Line"
              ]
            },
            "description": "Filter by facility model name"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of terminals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Facility_ReferenceFacility"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/facilities/{id}": {
      "get": {
        "summary": "Get Facility",
        "description": "Retrieve details of a specific facility, including its name, type, subtype, status and associated entity.",
        "operationId": "get_facility",
        "tags": [
          "Facilities"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The facility ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single facility.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Facility_Facility"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Facility not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Facility not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/facilities/types": {
      "get": {
        "summary": "List Types",
        "description": "Retrieve a list of facility types with pagination and filtering options.",
        "operationId": "get_facility_types",
        "tags": [
          "Facilities"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "description": "Filter by facility type code"
          },
          {
            "in": "query",
            "name": "model",
            "schema": {
              "type": "string",
              "enum": [
                "Terminal",
                "Station",
                "Plant",
                "Battery",
                "System",
                "Pipeline"
              ]
            },
            "description": "Filter by facility model type"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of facility types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Facility_ReferenceFacilityType"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/facilities/subtypes": {
      "get": {
        "summary": "List Sub Types",
        "description": "Retrieve a list of facility subtypes with pagination and filtering options.",
        "operationId": "get_facility_subtypes",
        "tags": [
          "Facilities"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "description": "Filter by facility subtype code"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "schema": {
              "type": "string",
              "enum": [
                "ALBERTA",
                "SASKATCHEWAN"
              ]
            },
            "description": "Filter by jurisdiction"
          },
          {
            "in": "query",
            "name": "facility_type",
            "schema": {
              "type": "string"
            },
            "description": "Filter by facility type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of facility subtypes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Facility_FacilitySubType"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "summary": "Get Organization",
        "description": "Retrieve details about the current organization including associated entities, wells, and facilities.",
        "operationId": "get_organization",
        "tags": [
          "Organization"
        ],
        "responses": {
          "200": {
            "description": "A single organization object containing organization details along with related entities, wells, terminals, plants, batteries, stations, systems and pipelines.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization_Organization"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "List Organizations",
        "description": "Retrieve a list of all organizations with pagination and filtering options.",
        "operationId": "get_organizations",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by organization name"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of organizations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization_ReferenceOrganization"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/users": {
      "get": {
        "summary": "List Users",
        "description": "Retrieve a list of users in the current organization with pagination and filtering options.",
        "operationId": "get_users",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "role_ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by role IDs"
          },
          {
            "in": "query",
            "name": "permission_ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by permission IDs"
          },
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Filter by title"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization_ReferenceUser"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/users/{id}": {
      "get": {
        "summary": "Get User",
        "description": "Retrieve details about a specific user in the current organization including their roles and permissions.",
        "operationId": "get_user",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single user object containing user details along with related roles and permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization_ReferenceUser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/roles": {
      "get": {
        "summary": "List Roles",
        "description": "Retrieve a list of user roles in the current organization.",
        "operationId": "get_roles",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user roles.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization_ReferenceUserRoles"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/permissions": {
      "get": {
        "summary": "List Permissions",
        "description": "Retrieve a list of user permissions in the current organization.",
        "operationId": "get_permissions",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization_ReferenceUserPermissions"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/commercial-facilities": {
      "get": {
        "summary": "List Commercial Facilities",
        "description": "List commercial facilities in the current organization with pagination and filtering options.",
        "operationId": "get_commercial_facilities",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "section",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Section"
          },
          {
            "in": "query",
            "name": "lsd",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Legal subdivision"
          },
          {
            "in": "query",
            "name": "meridian",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Meridian"
          },
          {
            "in": "query",
            "name": "range",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Range"
          },
          {
            "in": "query",
            "name": "township",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Township"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of commercial facilities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization_ReferenceCommercialFacility"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/commercial-facilities/{id}": {
      "get": {
        "summary": "Get Commercial Facility",
        "description": "Retrieve details about a specific commercial facility in the current organization including their related their associated facilities.",
        "operationId": "get_commercial_facility",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The commercial facility ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single commercial facility object containing facility details along with related terminals, batteries, plants, stations, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization_CommercialFacility"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Commercial facility not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Commercial facility not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/entities": {
      "get": {
        "summary": "List Entities",
        "description": "Retrieve a list of entities in the current organization with pagination and filtering options.",
        "operationId": "get_organization_entities",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of entities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Entity_ReferenceEntity"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/facilities": {
      "get": {
        "summary": "List Facilities",
        "description": "Retrieve a list of facilities in the current organization with pagination and filtering options.",
        "operationId": "get_organization_facilities",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of entities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Facility_ReferenceFacility"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/organization/products/categories/specifications": {
      "get": {
        "summary": "List Product Category Specifications",
        "description": "Retrieve a list of product category specifications in the current organization with pagination and filtering options.",
        "operationId": "get_product_categories_specifications",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "product_category_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by product category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of product category specifications.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product_ProductCategorySpecification"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "summary": "List Currencies",
        "description": "Retrieve a list of currencies with pagination.",
        "operationId": "get_currencies",
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency_ReferenceCurrency"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/currencies/convert": {
      "post": {
        "summary": "Convert Between Currencies",
        "description": "Retrieve the exchange rate between two currencies and convert a value.",
        "operationId": "convert_currency",
        "tags": [
          "Currency"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "value",
                  "from_currency",
                  "to_currency"
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value to convert"
                  },
                  "from_currency": {
                    "type": "string",
                    "description": "The symbol of the currency to convert from"
                  },
                  "to_currency": {
                    "type": "string",
                    "description": "The symbol of the currency to convert to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The converted value and exchange rate between the two currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "currency": {
                              "$ref": "#/components/schemas/Currency_ReferenceCurrency"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "currency": {
                              "$ref": "#/components/schemas/Currency_ReferenceCurrency"
                            }
                          }
                        },
                        "conversion": {
                          "$ref": "#/components/schemas/Currency_ReferenceCurrencyConversion"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "description": "Conversion not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Conversion not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List Products",
        "description": "Retrieve a list of products with pagination and filtering options.",
        "operationId": "get_products",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "product_category_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by product category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product_ReferenceProduct"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get Product",
        "description": "Retrieve details of a specific product, including its name, category, measurement units and unit conversions.",
        "operationId": "get_product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The product ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single product.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product_Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Product not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "summary": "List Product Categories",
        "description": "Retrieve a list of product categories with pagination and filtering options.",
        "operationId": "get_product_categories",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of product categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product_ReferenceProductCategory"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/categories/{id}": {
      "get": {
        "summary": "Get Product Category",
        "description": "Retrieve details of a specific product category, including its name, specifications, and measurement units.",
        "operationId": "get_product_category",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The product category ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single product category.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product_ProductCategory"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product category not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Product category not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/categories/measurement-units": {
      "get": {
        "summary": "List Measurement Units",
        "description": "Retrieve a list of measurement units with pagination and filtering options.",
        "operationId": "get_measurement_units",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by measurement unit name"
          },
          {
            "in": "query",
            "name": "abbreviation",
            "schema": {
              "type": "string"
            },
            "description": "Filter by measurement unit abbreviation"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "VOLUME",
                "TEMPERATURE",
                "DIMENSIONLESS",
                "DENSITY",
                "DISTANCE",
                "PRESSURE",
                "VISCOSITY",
                "MASS RATIO",
                "ENERGY",
                "FLOW RATE",
                "POWER",
                "PARTICLE SIZE"
              ]
            },
            "description": "Filter by measurement unit type"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of measurement units.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product_ReferenceMeasurementUnit"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/categories/measurement-units/{id}": {
      "get": {
        "summary": "Get Measurement Unit",
        "description": "Retrieve details of a specific measurement unit.",
        "operationId": "get_measurement_unit",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The measurement unit ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single measurement unit.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product_MeasurementUnit"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Measurement unit not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Measurement unit not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/products/categories/measurement-units/convert": {
      "post": {
        "summary": "Convert Between Measurement Units",
        "description": "Convert a value from one measurement unit to another using stored conversion factors.",
        "operationId": "convert_units",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "value",
                  "from_unit_id",
                  "to_unit_id",
                  "product_category_id"
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value to convert"
                  },
                  "from_unit_id": {
                    "type": "integer",
                    "description": "Measurement Unit ID"
                  },
                  "to_unit_id": {
                    "type": "integer",
                    "description": "Measurement Unit ID"
                  },
                  "product_category_id": {
                    "type": "integer",
                    "description": "Product Category ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful conversion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "product_category": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "measurement_unit": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "abbreviation": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "measurement_unit": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "abbreviation": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "formula": {
                          "type": "string",
                          "description": "The formula used for the conversion"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conversion not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Conversion not found."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Ping Server",
        "description": "Check the server health.",
        "operationId": "ping",
        "tags": [
          "Service"
        ],
        "responses": {
          "200": {
            "description": "Server is running.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "pong"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/meters": {
      "get": {
        "summary": "List Meters",
        "description": "Retrieve a list of meters.",
        "operationId": "get_meters",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "regulator_id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by regulator ID (searches across connected facilities)"
          },
          {
            "in": "query",
            "name": "facility_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by facility ID"
          },
          {
            "in": "query",
            "name": "operator_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by operator ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of meters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceMeter"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/meters/{id}": {
      "get": {
        "summary": "Get Meter",
        "description": "Retrieve a single meter by ID.",
        "operationId": "get_meter",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The meter ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single meter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_Meter"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meter not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Meter not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/statuses": {
      "get": {
        "summary": "List Ticket Statuses",
        "description": "Retrieve a list of ticket statuses with pagination options.",
        "operationId": "get_ticket_statuses",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ticket statuses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTicketStatus"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/codes": {
      "get": {
        "summary": "List Ticket Codes",
        "description": "Retrieve a list of ticket codes with pagination options.",
        "operationId": "get_ticket_codes",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ticket codes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTicketCode"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/truck": {
      "get": {
        "summary": "List Truck Tickets",
        "description": "Retrieve a list of truck tickets with pagination.",
        "operationId": "get_truck_tickets",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter by ticket status name"
          },
          {
            "in": "query",
            "name": "production_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Filter by production date (YYYY-MM-DD)"
          },
          {
            "in": "query",
            "name": "carrier_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by carrier ID"
          },
          {
            "in": "query",
            "name": "bill_of_laiden",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter by bill of laiden"
          },
          {
            "in": "query",
            "name": "rack_ticket",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter by rack ticket"
          },
          {
            "in": "query",
            "name": "pickup_commercial_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup commercial facility ID"
          },
          {
            "in": "query",
            "name": "pickup_commercial_entity_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup commercial entity ID"
          },
          {
            "in": "query",
            "name": "pickup_facility_operator_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup facility operator ID"
          },
          {
            "in": "query",
            "name": "pickup_battery_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup facility ID"
          },
          {
            "in": "query",
            "name": "pickup_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup facility ID"
          },
          {
            "in": "query",
            "name": "pickup_well_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by pickup well ID"
          },
          {
            "in": "query",
            "name": "delivery_commercial_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by delivery commercial facility ID"
          },
          {
            "in": "query",
            "name": "delivery_commercial_entity_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by delivery commercial entity ID"
          },
          {
            "in": "query",
            "name": "delivery_facility_operator_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by delivery facility operator ID"
          },
          {
            "in": "query",
            "name": "delivery_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by delivery facility ID"
          },
          {
            "in": "query",
            "name": "meter_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by meter ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of truck tickets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTruckTicket"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Truck Ticket",
        "description": "Create a new truck ticket",
        "operationId": "create_truck_ticket",
        "tags": [
          "Volumes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_RequestTruckTicket"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Truck ticket created (may include validation errors.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTruckTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTruckTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/truck/{id}": {
      "get": {
        "summary": "Get Truck Ticket",
        "description": "Retrieve a single truck ticket by ID.",
        "operationId": "get_truck_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The truck ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single truck ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_TruckTicket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Truck ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Truck ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Truck Ticket",
        "description": "Update an existing truck ticket by ID.",
        "operationId": "update_truck_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The truck ticket ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_ReferenceTruckTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated truck ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTruckTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTruckTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Truck ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Truck ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/truck/{id}/cancel": {
      "patch": {
        "summary": "Cancel Truck Ticket",
        "description": "Cancel an existing truck ticket by ID.",
        "operationId": "cancel_truck_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The truck ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Canceled truck ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTruckTicket"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Truck ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Truck ticket not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/tank": {
      "get": {
        "summary": "List Tank Tickets",
        "description": "Retrieve a list of tank tickets with pagination.",
        "operationId": "get_tank_tickets",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter by ticket status name"
          },
          {
            "in": "query",
            "name": "production_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Filter by production date (YYYY-MM-DD)"
          },
          {
            "in": "query",
            "name": "commercial_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by commercial facility ID"
          },
          {
            "in": "query",
            "name": "commercial_entity_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by commercial entity ID"
          },
          {
            "in": "query",
            "name": "facility_operator_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by facility operator ID"
          },
          {
            "in": "query",
            "name": "facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by facility ID"
          },
          {
            "in": "query",
            "name": "meter_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by meter ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of tank tickets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTankTicket"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Tank Ticket",
        "description": "Create a new tank ticket",
        "operationId": "create_tank_ticket",
        "tags": [
          "Volumes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_RequestTankTicket"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tank ticket created (may include validation errors.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTankTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTankTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/tank/{id}": {
      "get": {
        "summary": "Get Tank Ticket",
        "description": "Retrieve a single tank ticket by ID.",
        "operationId": "get_tank_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The tank ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single tank ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_TankTicket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tank ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Tank ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Tank Ticket",
        "description": "Update an existing tank ticket by ID.",
        "operationId": "update_tank_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The tank ticket ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_RequestTankTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated tank ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTankTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceTankTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tank ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Tank ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/tank/{id}/cancel": {
      "patch": {
        "summary": "Cancel Tank Ticket",
        "description": "Cancel an existing tank ticket by ID.",
        "operationId": "cancel_tank_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The tank ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Canceled tank ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceTankTicket"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Tank ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Tank ticket not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/meter": {
      "get": {
        "summary": "List Meter Tickets",
        "description": "Retrieve a list of meter tickets with pagination.",
        "operationId": "get_meter_tickets",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter by ticket status name"
          },
          {
            "in": "query",
            "name": "production_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Filter by production date (YYYY-MM-DD)"
          },
          {
            "in": "query",
            "name": "commercial_facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by commercial facility ID"
          },
          {
            "in": "query",
            "name": "commercial_entity_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by commercial entity ID"
          },
          {
            "in": "query",
            "name": "facility_operator_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by facility operator ID"
          },
          {
            "in": "query",
            "name": "facility_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by facility ID"
          },
          {
            "in": "query",
            "name": "meter_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Filter by meter ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of meter tickets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceMeterTicket"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Meter Ticket",
        "description": "Create a new meter ticket",
        "operationId": "create_meter_ticket",
        "tags": [
          "Volumes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_RequestMeterTicket"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meter ticket created (may include validation errors.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceMeterTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceMeterTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/meter/{id}": {
      "get": {
        "summary": "Get Meter Ticket",
        "description": "Retrieve a single meter ticket by ID.",
        "operationId": "get_meter_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The meter ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single meter ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_MeterTicket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meter ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Meter ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Meter Ticket",
        "description": "Update an existing meter ticket by ID.",
        "operationId": "update_meter_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The meter ticket ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volumes_RequestMeterTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated meter ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceMeterTicket"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volumes_ReferenceMeterTicketError"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meter ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Meter ticket not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tickets/meter/{id}/cancel": {
      "patch": {
        "summary": "Cancel Meter Ticket",
        "description": "Cancel an existing meter ticket by ID.",
        "operationId": "cancel_meter_ticket",
        "tags": [
          "Volumes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The meter ticket ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Canceled meter ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Volumes_ReferenceMeterTicket"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Meter ticket not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Meter ticket not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/wells": {
      "get": {
        "summary": "List Wells",
        "description": "Retrieve a list of wells with pagination and filtering options.",
        "operationId": "get_wells",
        "tags": [
          "Wells"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "schema": {
              "type": "string",
              "enum": [
                "ALBERTA",
                "SASKATCHEWAN"
              ]
            },
            "required": false,
            "description": "Jurisdiction"
          },
          {
            "in": "query",
            "name": "license_issued",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "License issue date"
          },
          {
            "in": "query",
            "name": "license_number",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "License number"
          },
          {
            "in": "query",
            "name": "license_status",
            "schema": {
              "type": "string",
              "enum": [
                "ABANDONED",
                "AMMENDED",
                "CANCELLED",
                "DECOMMISSION",
                "ISSUED",
                "RE-ENTERED",
                "RECCERTIFIED",
                "RECEXEMPT",
                "SUSPENDED",
                "SUSPENSION"
              ]
            },
            "required": false,
            "description": "License status"
          },
          {
            "in": "query",
            "name": "license_type",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "License type"
          },
          {
            "in": "query",
            "name": "licensee_id",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Licensee entity ID"
          },
          {
            "in": "query",
            "name": "regulator_id",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Regulator ID"
          },
          {
            "in": "query",
            "name": "section",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Section"
          },
          {
            "in": "query",
            "name": "event_sequence",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Event sequence number"
          },
          {
            "in": "query",
            "name": "location_exception",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Location exception"
          },
          {
            "in": "query",
            "name": "lsd",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Legal subdivision"
          },
          {
            "in": "query",
            "name": "meridian",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Meridian"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Well name"
          },
          {
            "in": "query",
            "name": "range",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Range"
          },
          {
            "in": "query",
            "name": "township",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Township"
          },
          {
            "in": "query",
            "name": "uwi",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Unique Well Identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of wells.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Wells_ReferenceWell"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/wells/{id}": {
      "get": {
        "summary": "Get Well",
        "description": "Retrieve details about a specific well including associated entity information.",
        "operationId": "get_well",
        "tags": [
          "Wells"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The well ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single well object containing well details along with related entity information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Wells_Well"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Well not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Well not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/entities": {
      "get": {
        "summary": "List Entities",
        "description": "Retrieve a list of entities with pagination and filtering options.",
        "operationId": "get_entities",
        "tags": [
          "Entity"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "legal_name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by legal name"
          },
          {
            "in": "query",
            "name": "business_line_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by business line ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of entities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Entity_ReferenceEntity"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/entities/{id}": {
      "get": {
        "summary": "Get Entity",
        "description": "Retrieve details about a specific entity including associated producer, carrier, marketer and other entity types.",
        "operationId": "get_entity",
        "tags": [
          "Entity"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The entity ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A single entity object containing entity details along with related entity type information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Entity_Entity"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Entity not found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/entities/business-lines": {
      "get": {
        "summary": "List Business Lines",
        "description": "Retrieve a list of business lines with pagination and filtering options.",
        "operationId": "get_business_lines",
        "tags": [
          "Entity"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by business line name"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of business lines.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Entity_ReferenceBusinessLine"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/search": {
      "get": {
        "summary": "Search Lookups",
        "description": "Search across different lookup types by name",
        "operationId": "search_lookups",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "model",
            "schema": {
              "type": "string",
              "enum": [
                "Facility",
                "Well",
                "Entity",
                "CommercialFacility"
              ]
            },
            "required": true,
            "description": "The type of lookup to search"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Single matching lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Integrations_ReferenceFacilityLookup"
                        },
                        {
                          "$ref": "#/components/schemas/Integrations_ReferenceWellLookup"
                        },
                        {
                          "$ref": "#/components/schemas/Integrations_ReferenceEntityLookup"
                        },
                        {
                          "$ref": "#/components/schemas/Integrations_ReferenceCommercialFacilityLookup"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "No matching lookups found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No matching lookups found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integrations/lookups/facilities": {
      "get": {
        "summary": "List Facility Lookups",
        "description": "Retrieve a list of facility lookups in the current organization with pagination and filtering options.",
        "operationId": "get_facility_lookups",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Filter by date (YYYY-MM-DD) - returns lookups active on this date"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of facility lookups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integrations_ReferenceFacilityLookup"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Facility Lookup",
        "description": "Create a new facility lookup",
        "operationId": "create_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_ReferenceFacilityLookup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Facility lookup created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_ReferenceFacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/facilities/{id}": {
      "get": {
        "summary": "Get Facility Lookup",
        "description": "Retrieve a single facility lookup by ID",
        "operationId": "get_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The facility lookup ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single facility lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_FacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Facility lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Facility lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Facility Lookup",
        "description": "Update an existing facility lookup by ID",
        "operationId": "update_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The facility lookup ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_FacilityLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated facility lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_FacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Facility lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Facility lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/wells": {
      "get": {
        "summary": "List Well Lookups",
        "description": "Retrieve a list of well lookups in the current orgainzation with pagination.",
        "operationId": "get_well_lookups",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of well lookups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integrations_ReferenceWellLookup"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Well Lookup",
        "description": "Create a new well lookup",
        "operationId": "create_well_lookup",
        "tags": [
          "Integrations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_ReferenceWellLookup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Well lookup created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_ReferenceWellLookup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/wells/{id}": {
      "get": {
        "summary": "Get Well Lookup",
        "description": "Retrieve a single well lookup by ID",
        "operationId": "get_well_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The well lookup ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single well lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_WellLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Well lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Well lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Well Lookup",
        "description": "Update an existing well lookup by ID",
        "operationId": "update_well_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The well lookup ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_WellLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated well lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_WellLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Well lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Well lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/commercial-facilities": {
      "get": {
        "summary": "List Commercial Facility Lookups",
        "description": "Retrieve a list of commercial facility lookups in the current organization with pagination.",
        "operationId": "get_commercial_facility_lookups",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of commercial facility lookups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integrations_ReferenceCommercialFacilityLookup"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Commercial Facility Lookup",
        "description": "Create a new commercial facility lookup",
        "operationId": "create_commercial_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_ReferenceCommercialFacilityLookup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Commercial facility lookup created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_ReferenceCommercialFacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/commercial-facilities/{id}": {
      "get": {
        "summary": "Get Commercial Facility Lookup",
        "description": "Retrieve a single commercial facility lookup by ID",
        "operationId": "get_commercial_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The commercial facility lookup ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single commercial facility lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_CommercialFacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Commercial facility lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Commercial facility lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Commercial Facility Lookup",
        "description": "Update an existing commercial facility lookup by ID",
        "operationId": "update_commercial_facility_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The commercial facility lookup ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_CommercialFacilityLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated commercial facility lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_CommercialFacilityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Commercial facility lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Commercial facility lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/entities": {
      "get": {
        "summary": "List Entity Lookups",
        "description": "Retrieve a list of entity lookups in the current organization with pagination.",
        "operationId": "get_entity_lookups",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of entity lookups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integrations_EntityLookup"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create Entity Lookup",
        "description": "Create a new entity lookup",
        "operationId": "create_entity_lookup",
        "tags": [
          "Integrations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_EntityLookup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity lookup created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_EntityLookup"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/integrations/lookups/entities/{id}": {
      "get": {
        "summary": "Get Entity Lookup",
        "description": "Retrieve a single entity lookup by ID",
        "operationId": "get_entity_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The entity lookup ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single entity lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_EntityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Entity lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update Entity Lookup",
        "description": "Update an existing entity lookup by ID",
        "operationId": "update_entity_lookup",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The entity lookup ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integrations_EntityLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated entity lookup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Integrations_EntityLookup"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity lookup not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Entity lookup not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "openapi": "3.0.2"
}